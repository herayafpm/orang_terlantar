<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Admin_model extends CI_Model
{
    protected $table = 'admin';
    protected $admin_nama = 'admin_nama';
    protected $defaultPass = '123456';
    function __construct()
    {
        parent::__construct();
    }
    
    public function filter($search, $limit, $start, $order_field, $order_ascdesc,$except = NULL){
        $this->db->like($this->admin_nama, $search); // Untuk menambahkan query where LIKE
        $this->db->order_by($order_field, $order_ascdesc); // Untuk menambahkan query ORDER BY
        $this->db->limit($limit, $start); // Untuk menambahkan query LIMIT
        if($except != null){
          $this->db->where_not_in('admin_id',[$except]);
        }
        return $this->db->get($this->table)->result_array(); // Eksekusi query sql sesuai kondisi diatas
    }
    public function count_all($except = NULL){
        if($except != null){
          $this->db->where_not_in('admin_id',[$except]);
        }
        return $this->db->count_all($this->table); // Untuk menghitung semua data siswa
    }
    public function count_filter($search,$except = NULL){
        $this->db->like($this->admin_nama, $search); // Untuk menambahkan query where OR LIKE
        if($except != null){
          $this->db->where_not_in('admin_id',[$except]);
        }
        return $this->db->get($this->table)->num_rows(); // Untuk menghitung jumlah data sesuai dengan filter pada textbox pencarian
    }
    
    /*
     * Get admin by admin_id
     */
    function get_admin($admin_id)
    {
        return $this->db->get_where($this->table,array('admin_id'=>$admin_id))->row_array();
    }
    function get_admin_by_username($admin_username)
    {
        return $this->db->get_where($this->table,array('admin_username'=>$admin_username))->row_array();
    }
    
    /*
     * Get all admin count
     */
    function get_all_admin_count()
    {
        $this->db->from($this->table);
        return $this->db->count_all_results();
    }
        
    /*
     * Get all admin
     */
    function get_all_admin($params = [])
    {
        $this->db->order_by('admin_id', 'desc');
        if(isset($params) && !empty($params))
        {
            $this->db->limit($params['limit'], $params['offset']);
        }
        return $this->db->get($this->table)->result_array();
    }
        
    /*
     * function to add new admin
     */
    function add_admin($params)
    {
      $params['created_at'] = date('Y-m-d H:i:s');
      $params['updated_at'] = date('Y-m-d H:i:s');
      if(isset($params['admin_password'])){
        $params['admin_password'] = password_hash($params['admin_password'],PASSWORD_DEFAULT);
      }else{
        $params['admin_password'] = password_hash($this->defaultPass,PASSWORD_DEFAULT);
      }
      $this->db->insert($this->table,$params);
      return $this->db->insert_id();
    }
    
    /*
     * function to update admin
     */
    function update_admin($admin_id,$params)
    {
        $params['updated_at'] = date('Y-m-d H:i:s');
        if(isset($params['admin_password'])){
          $params['admin_password'] = password_hash($params['admin_password'],PASSWORD_DEFAULT);
        }
        $this->db->where('admin_id',$admin_id);
        return $this->db->update($this->table,$params);
    }
    
    /*
     * function to delete admin
     */
    function delete_admin($admin_id)
    {
        return $this->db->delete($this->table,array('admin_id'=>$admin_id));
    }
    function seed()
    {
        $this->db->truncate($this->table);
        $password = '123456';
        $data = [
          [
            "admin_nama" => strtoupper("super admin"),
            "admin_username" => strtolower('superadmin'),
            "role_id" => 1,
            "admin_password" => password_hash($password,PASSWORD_DEFAULT),
            "created_at"  => date('Y-m-d H:i:s'),
            "updated_at"  => date('Y-m-d H:i:s'),
          ],
          [
            "admin_nama" => strtoupper("admin"),
            "admin_username" => strtolower($this->table),
            "role_id" => 2,
            "admin_password" => password_hash($password,PASSWORD_DEFAULT),
            "created_at"  => date('Y-m-d H:i:s'),
            "updated_at"  => date('Y-m-d H:i:s'),
          ],
        ];

        $this->db->insert_batch($this->table, $data);
    }
    function authenticate($params)
    {
      if(empty($params['admin_username']) || empty($params['admin_password'])){
        return false;
      }
      $admin = $this->db->get_where($this->table,['admin_username' => $params['admin_username']])->row_array();
      if($admin){
        if(password_verify($params['admin_password'],$admin['admin_password'])){
          return $admin;
        }else{
          return false;
        }
      }
      return false;
    }
}