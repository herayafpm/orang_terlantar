<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User_model extends CI_Model
{
    protected $table = 'user';
    protected $user_nama = 'user_nama';
    protected $defaultPass = '123456';
    function __construct()
    {
        parent::__construct();
    }
    
    public function filter($search, $limit, $start, $order_field, $order_ascdesc,$except = NULL){
        $this->db->like($this->user_nama, $search); // Untuk menambahkan query where LIKE
        $this->db->order_by($order_field, $order_ascdesc); // Untuk menambahkan query ORDER BY
        $this->db->limit($limit, $start); // Untuk menambahkan query LIMIT
        if($except != null){
          $this->db->where_not_in('user_id',[$except]);
        }
        return $this->db->get($this->table)->result_array(); // Eksekusi query sql sesuai kondisi diatas
    }
    public function count_all($except = NULL){
        if($except != null){
          $this->db->where_not_in('user_id',[$except]);
        }
        return $this->db->count_all($this->table); // Untuk menghitung semua data siswa
    }
    public function count_filter($search,$except = NULL){
        $this->db->like($this->user_nama, $search); // Untuk menambahkan query where OR LIKE
        if($except != null){
          $this->db->where_not_in('user_id',[$except]);
        }
        return $this->db->get($this->table)->num_rows(); // Untuk menghitung jumlah data sesuai dengan filter pada textbox pencarian
    }
    
    /*
     * Get user by user_id
     */
    function get_user($user_id)
    {
        return $this->db->get_where($this->table,array('user_id'=>$user_id))->row_array();
    }
    function get_user_by_nik($user_nik)
    {
        return $this->db->get_where($this->table,array('user_nik'=>$user_nik))->row_array();
    }
    
    /*
     * Get all user count
     */
    function get_all_user_count()
    {
        $this->db->from($this->table);
        return $this->db->count_all_results();
    }
        
    /*
     * Get all user
     */
    function get_all_user($params = [])
    {
        $this->db->order_by('user_id', 'desc');
        if(isset($params) && !empty($params))
        {
            $this->db->limit($params['limit'], $params['offset']);
        }
        return $this->db->get($this->table)->result_array();
    }
        
    /*
     * function to add new user
     */
    function add_user($params)
    {
      $params['created_at'] = date('Y-m-d H:i:s');
      $params['updated_at'] = date('Y-m-d H:i:s');
      if(isset($params['user_password'])){
        $params['user_password'] = password_hash($params['user_password'],PASSWORD_DEFAULT);
      }else{
        $params['user_password'] = password_hash($this->defaultPass,PASSWORD_DEFAULT);
      }
      $params['user_tanggal_lahir'] = date('Y-m-d',strtotime($params['user_tanggal_lahir']));
      $params['user_status'] = 1;
      $this->db->insert($this->table,$params);
      return $this->db->insert_id();
    }
    
    /*
     * function to update user
     */
    function update_user($user_id,$params)
    {
        $params['updated_at'] = date('Y-m-d H:i:s');
        if(isset($params['user_password'])){
          $params['user_password'] = password_hash($params['user_password'],PASSWORD_DEFAULT);
        }
        $this->db->where('user_id',$user_id);
        return $this->db->update($this->table,$params);
    }

    function set_login_user($user_id)
    {
      $params['last_login'] = date('Y-m-d H:i:s');
      $this->db->where('user_id',$user_id);
      return $this->db->update($this->table,$params);
    }
    
    /*
     * function to delete user
     */
    function delete_user($user_id)
    {
        return $this->db->delete($this->table,array('user_id'=>$user_id));
    }
    function authenticate($params)
    {
      if(empty($params['user_nik']) || empty($params['user_password'])){
        return false;
      }
      $user = $this->db->get_where($this->table,['user_nik' => $params['user_nik']])->row_array();
      if($user){
        if(password_verify($params['user_password'],$user['user_password'])){
          if($user['user_status'] == 1){
            $this->set_login_user($user['user_id']);
          }
          return $user;
        }else{
          return false;
        }
      }
      return false;
    }
}