<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Bansos_model extends CI_Model
{
    protected $table = 'bansos';
    protected $bansos_nama = 'bansos_nama';
    function __construct()
    {
        parent::__construct();
    }

    public function filter($search, $limit, $start, $order_field, $order_ascdesc)
    {
        $this->db->order_by($order_field, $order_ascdesc); // Untuk menambahkan query ORDER BY
        $this->db->limit($limit, $start); // Untuk menambahkan query LIMIT
        $this->db->from($this->table);
        $this->db->join('sumber_dana', 'sumber_dana.sumber_dana_id = bansos.sumber_dana_id', 'LEFT');
        $this->db->like($this->bansos_nama, $search); // Untuk menambahkan query where LIKE
        $this->db->or_like('sumber_dana_nama', $search); // Untuk menambahkan query where LIKE
        return $this->db->get()->result_array(); // Eksekusi query sql sesuai kondisi diatas
    }
    public function count_all()
    {
        return $this->db->count_all($this->table); // Untuk menghitung semua data siswa
    }
    public function count_filter($search)
    {
        $this->db->from($this->table);
        $this->db->join('sumber_dana', 'sumber_dana.sumber_dana_id = bansos.sumber_dana_id', 'LEFT');
        $this->db->like($this->bansos_nama, $search); // Untuk menambahkan query where LIKE
        $this->db->or_like('sumber_dana_nama', $search); // Untuk menambahkan query where LIKE
        return $this->db->get()->num_rows(); // Untuk menghitung jumlah data sesuai dengan filter pada textbox pencarian
    }

    /*
     * Get bansos by bansos_id
     */
    function get_bansos($bansos_id)
    {
        return $this->db->get_where($this->table, array('bansos_id' => $bansos_id))->row_array();
    }
    function get_bansos_by_sumber_id($sumber_dana_id)
    {
        return $this->db->get_where($this->table, array('sumber_dana_id' => $sumber_dana_id))->result_array();
    }

    /*
     * Get all bansos count
     */
    function get_all_bansos_count()
    {
        $this->db->from($this->table);
        return $this->db->count_all_results();
    }
    public function is_using($kolom, $id)
    {
        $data = $this->db->get_where($this->table, array($kolom => $id))->row_array();
        if ($data) {
            return true;
        } else {
            return false;
        }
    }

    /*
     * Get all bansos
     */
    function get_all_bansos($params = [])
    {
        $this->db->order_by('bansos_id', 'desc');
        if (isset($params) && !empty($params)) {
            $this->db->limit($params['limit'], $params['offset']);
        }
        return $this->db->get($this->table)->result_array();
    }

    /*
     * function to add new bansos
     */
    function add_bansos($params)
    {
        $this->db->insert($this->table, $params);
        return $this->db->insert_id();
    }

    /*
     * function to update bansos
     */
    function update_bansos($bansos_id, $params)
    {
        $this->db->where('bansos_id', $bansos_id);
        return $this->db->update($this->table, $params);
    }

    /*
     * function to delete bansos
     */
    function delete_bansos($bansos_id)
    {
        return $this->db->delete($this->table, array('bansos_id' => $bansos_id));
    }
    function seed()
    {
        $data = [
            [
                "sumber_dana_id" => 1,
                "bansos_nama" => "PKH",
                "bansos_total" => 1000000
            ],
            [
                "sumber_dana_id" => 2,
                "bansos_nama" => "BPNT",
                "bansos_total" => 1000000
            ],
            [
                "sumber_dana_id" => 3,
                "bansos_nama" => "PKH",
                "bansos_total" => 2000000
            ],
        ];

        $this->db->insert_batch($this->table, $data);
    }
}
