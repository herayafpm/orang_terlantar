<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Terlantar_model extends CI_Model
{
    protected $table = 'terlantar';
    protected $terlantar_nama = 'terlantar_nama';
    protected $terlantar_nik = 'terlantar_nik';
    function __construct()
    {
        parent::__construct();
    }
    public function get_by_user_daftar($id)
    {
        $datas = $this->db->select('terlantar_id')->from($this->table)->where(['user_daftar' => $id])->get()->result_array();
        $arr = [];
        foreach ($datas as $data) {
            array_push($arr, $data['terlantar_id']);
        }
        return $arr;
    }
    public function count_field($field)
    {
        $this->db->select("{$field} as nama, COUNT({$field}) as jumlah");
        $this->db->where("{$field} !=", null);
        $this->db->group_by($field);
        $this->db->from($this->table);
        $query = $this->db->get();
        return $query->result_array();
    }
    public function count_where($where)
    {
        $this->db->where($where);
        $this->db->from($this->table);
        return $this->db->get()->num_rows();
    }

    public function filter($search, $limit, $start, $order_field, $order_ascdesc, $params = [])
    {
        $this->db->order_by($order_field, $order_ascdesc); // Untuk menambahkan query ORDER BY
        $this->db->limit($limit, $start); // Untuk menambahkan query LIMIT
        $this->db->select('terlantar.*');
        $this->db->select('agama.agama_nama');
        $this->db->select('sumber_dana.sumber_dana_nama');
        $this->db->select('bansos.bansos_nama,bansos.bansos_total');
        $this->db->select('orang_terlantar.orang_terlantar_nama');
        $this->db->select('tempat_tinggal.tempat_tinggal_nama');
        $this->db->select('kondisi_tempat_tinggal.kondisi_tempat_tinggal_nama');
        $this->db->select('kategori_ot.kategori_ot_nama');
        $this->db->select('fasilitas_kesehatan.fasilitas_kesehatan_nama');
        $this->db->select('kondisi_ot.kondisi_ot_nama');
        $this->db->select('kebutuhan_diperlukan.kebutuhan_diperlukan_nama');
        $this->db->select('terlantar_proses.proses_at,terlantar_proses.proses_by');
        $this->db->select('terlantar_tolak.tolak_at,terlantar_tolak.tolak_by');
        $this->db->select('terlantar_verif.verif_at,terlantar_verif.verif_by');
        $this->db->select('admin_proses.admin_nama as admin_proses_nama');
        $this->db->select('admin_verif.admin_nama as admin_verif_nama');
        $this->db->select('admin_tolak.admin_nama as admin_tolak_nama');
        $this->db->select('user_pendaftar.user_nama as user_pendaftar_nama');
        $this->db->from($this->table);
        $this->db->join('orang_terlantar', 'orang_terlantar.orang_terlantar_id = terlantar.orang_terlantar_id', 'LEFT');
        $this->db->join('agama', 'agama.agama_id = terlantar.agama_id', 'LEFT');
        $this->db->join('sumber_dana', 'sumber_dana.sumber_dana_id = terlantar.sumber_dana_id', 'LEFT');
        $this->db->join('bansos', 'bansos.bansos_id = terlantar.bansos_id', 'LEFT');
        $this->db->join('tempat_tinggal', 'tempat_tinggal.tempat_tinggal_id = terlantar.tempat_tinggal_id', 'LEFT');
        $this->db->join('kondisi_tempat_tinggal', 'kondisi_tempat_tinggal.kondisi_tempat_tinggal_id = terlantar.kondisi_tempat_tinggal_id', 'LEFT');
        $this->db->join('kategori_ot', 'kategori_ot.kategori_ot_id = terlantar.kategori_ot_id', 'LEFT');
        $this->db->join('fasilitas_kesehatan', 'fasilitas_kesehatan.fasilitas_kesehatan_id = terlantar.fasilitas_kesehatan_id', 'LEFT');
        $this->db->join('kondisi_ot', 'kondisi_ot.kondisi_ot_id = terlantar.kondisi_ot_id', 'LEFT');
        $this->db->join('kebutuhan_diperlukan', 'kebutuhan_diperlukan.kebutuhan_diperlukan_id = terlantar.kebutuhan_diperlukan_id', 'LEFT');
        $this->db->join('terlantar_proses', 'terlantar_proses.terlantar_id = terlantar.terlantar_id', 'LEFT');
        $this->db->join('terlantar_verif', 'terlantar_verif.terlantar_id = terlantar.terlantar_id', 'LEFT');
        $this->db->join('terlantar_tolak', 'terlantar_tolak.terlantar_id = terlantar.terlantar_id', 'LEFT');
        $this->db->join('admin as admin_verif', 'admin_verif.admin_id = terlantar_verif.verif_by', 'LEFT');
        $this->db->join('admin as admin_tolak', 'admin_tolak.admin_id = terlantar_tolak.tolak_by', 'LEFT');
        $this->db->join('admin as admin_proses', 'admin_proses.admin_id = terlantar_proses.proses_by', 'LEFT');
        $this->db->join('user as user_pendaftar', 'user_pendaftar.user_id = terlantar.user_daftar', 'LEFT');
        if (isset($params['where'])) {
            $this->db->where($params['where']);
        }
        if (isset($params['like'])) {
            foreach ($params['like'] as $key => $value) {
                $this->db->like($key, $value);
            }
        }
        $datas = $this->db->get()->result_array();
        return $datas; // Eksekusi query sql sesuai kondisi diatas
    }
    public function count_all($params = [])
    {
        $this->db->from($this->table);
        if (isset($params['where'])) {
            $this->db->where($params['where']);
        }
        if (isset($params['like'])) {
            foreach ($params['like'] as $key => $value) {
                $this->db->like($key, $value);
            }
        }
        $data = $this->db->get()->num_rows();
        return $data;
    }
    // public function count_all_not_in($verif)
    // {
    //     $this->db->where_not_in('terlantar_id', $verif);
    //     $this->db->from($this->table);
    //     return $this->db->count_all_results();
    // }
    public function count_filter($search, $params = [])
    {
        $this->db->from($this->table);
        if (isset($params['where'])) {
            $this->db->where($params['where']);
        }
        if (isset($params['like'])) {
            foreach ($params['like'] as $key => $value) {
                $this->db->like($key, $value);
            }
        }
        $data = $this->db->get()->num_rows();
        return $data; // Untuk menghitung jumlah data sesuai dengan filter pada textbox pencarian
    }

    public function get_distinct_terlantar($field)
    {
        $this->db->select("{$field} as nama");
        $this->db->distinct($field);
        $this->db->from($this->table);
        return $this->db->get()->result_array();
    }

    /*
     * Get terlantar by terlantar_id
     */
    function get_terlantar($terlantar_id)
    {
        return $this->db->get_where($this->table, array('terlantar_id' => $terlantar_id))->row_array();
    }
    public function is_using($kolom, $id)
    {
        $this->db->select('terlantar.*');
        $this->db->select('terlantar_proses.proses_at,terlantar_proses.proses_by');
        $this->db->select('terlantar_tolak.tolak_at,terlantar_tolak.tolak_by');
        $this->db->select('terlantar_verif.verif_at,terlantar_verif.verif_by');
        $this->db->from($this->table);
        $this->db->join('terlantar_proses', 'terlantar_proses.terlantar_id = terlantar.terlantar_id', 'LEFT');
        $this->db->join('terlantar_verif', 'terlantar_verif.terlantar_id = terlantar.terlantar_id', 'LEFT');
        $this->db->join('terlantar_tolak', 'terlantar_tolak.terlantar_id = terlantar.terlantar_id', 'LEFT');
        $this->db->where([$kolom => $id]);
        $data = $this->db->get()->row_array();
        if ($data) {
            return true;
        } else {
            return false;
        }
    }
    function get_search_terlantar($search)
    {

        $this->db->select('terlantar.*');
        $this->db->select('agama.agama_nama');
        $this->db->select('sumber_dana.sumber_dana_nama');
        $this->db->select('bansos.bansos_nama,bansos.bansos_total');
        $this->db->select('orang_terlantar.orang_terlantar_nama');
        $this->db->select('tempat_tinggal.tempat_tinggal_nama');
        $this->db->select('kondisi_tempat_tinggal.kondisi_tempat_tinggal_nama');
        $this->db->select('kategori_ot.kategori_ot_nama');
        $this->db->select('fasilitas_kesehatan.fasilitas_kesehatan_nama');
        $this->db->select('kondisi_ot.kondisi_ot_nama');
        $this->db->select('kebutuhan_diperlukan.kebutuhan_diperlukan_nama');
        $this->db->select('terlantar_proses.proses_at,terlantar_proses.proses_by');
        $this->db->select('terlantar_tolak.tolak_at,terlantar_tolak.tolak_by');
        $this->db->select('terlantar_verif.verif_at,terlantar_verif.verif_by');
        $this->db->select('admin_proses.admin_nama as admin_proses_nama');
        $this->db->select('admin_verif.admin_nama as admin_verif_nama');
        $this->db->select('admin_tolak.admin_nama as admin_tolak_nama');
        $this->db->select('user_pendaftar.user_nama as user_pendaftar_nama');
        $this->db->from($this->table);
        $this->db->join('orang_terlantar', 'orang_terlantar.orang_terlantar_id = terlantar.orang_terlantar_id', 'LEFT');
        $this->db->join('agama', 'agama.agama_id = terlantar.agama_id', 'LEFT');
        $this->db->join('sumber_dana', 'sumber_dana.sumber_dana_id = terlantar.sumber_dana_id', 'LEFT');
        $this->db->join('bansos', 'bansos.bansos_id = terlantar.bansos_id', 'LEFT');
        $this->db->join('tempat_tinggal', 'tempat_tinggal.tempat_tinggal_id = terlantar.tempat_tinggal_id', 'LEFT');
        $this->db->join('kondisi_tempat_tinggal', 'kondisi_tempat_tinggal.kondisi_tempat_tinggal_id = terlantar.kondisi_tempat_tinggal_id', 'LEFT');
        $this->db->join('kategori_ot', 'kategori_ot.kategori_ot_id = terlantar.kategori_ot_id', 'LEFT');
        $this->db->join('fasilitas_kesehatan', 'fasilitas_kesehatan.fasilitas_kesehatan_id = terlantar.fasilitas_kesehatan_id', 'LEFT');
        $this->db->join('kondisi_ot', 'kondisi_ot.kondisi_ot_id = terlantar.kondisi_ot_id', 'LEFT');
        $this->db->join('kebutuhan_diperlukan', 'kebutuhan_diperlukan.kebutuhan_diperlukan_id = terlantar.kebutuhan_diperlukan_id', 'LEFT');
        $this->db->join('terlantar_proses', 'terlantar_proses.terlantar_id = terlantar.terlantar_id', 'LEFT');
        $this->db->join('terlantar_verif', 'terlantar_verif.terlantar_id = terlantar.terlantar_id', 'LEFT');
        $this->db->join('terlantar_tolak', 'terlantar_tolak.terlantar_id = terlantar.terlantar_id', 'LEFT');
        $this->db->join('admin as admin_verif', 'admin_verif.admin_id = terlantar_verif.verif_by', 'LEFT');
        $this->db->join('admin as admin_tolak', 'admin_tolak.admin_id = terlantar_tolak.tolak_by', 'LEFT');
        $this->db->join('admin as admin_proses', 'admin_proses.admin_id = terlantar_proses.proses_by', 'LEFT');
        $this->db->join('user as user_pendaftar', 'user_pendaftar.user_id = terlantar.user_daftar', 'LEFT');
        $this->db->where($this->terlantar_nik, $search);
        $datas = $this->db->get()->result_array();
        return $datas;
    }
    function get_terlantar_detail($terlantar_id = NULL, $where = NULL, $whereNotIn = NULL)
    {
        $this->db->select('terlantar.*');
        $this->db->select('orang_terlantar.orang_terlantar_nama');
        $this->db->select('agama.agama_nama');
        $this->db->select('tempat_tinggal.tempat_tinggal_nama');
        $this->db->select('kondisi_tempat_tinggal.kondisi_tempat_tinggal_nama');
        $this->db->select('kategori_ot.kategori_ot_nama');
        $this->db->select('fasilitas_kesehatan.fasilitas_kesehatan_nama');
        $this->db->select('kondisi_ot.kondisi_ot_nama');
        $this->db->select('kebutuhan_diperlukan.kebutuhan_diperlukan_nama');
        $this->db->select('sumber_dana.sumber_dana_nama');
        $this->db->select('bansos.bansos_nama,bansos.bansos_total');
        $this->db->select('user.user_nama');
        $this->db->select('admin_verif.admin_nama as verif_admin_nama');
        $this->db->select('admin_terima.admin_nama as terima_admin_nama');
        $this->db->select('admin_tolak.admin_nama as tolak_admin_nama');
        $this->db->from($this->table);
        $this->db->join('orang_terlantar', 'orang_terlantar.orang_terlantar_id = terlantar.orang_terlantar_id', 'LEFT');
        $this->db->join('agama', 'agama.agama_id = terlantar.agama_id', 'LEFT');
        $this->db->join('tempat_tinggal', 'tempat_tinggal.tempat_tinggal_id = terlantar.tempat_tinggal_id', 'LEFT');
        $this->db->join('kondisi_tempat_tinggal', 'kondisi_tempat_tinggal.kondisi_tempat_tinggal_id = terlantar.kondisi_tempat_tinggal_id', 'LEFT');
        $this->db->join('kategori_ot', 'kategori_ot.kategori_ot_id = terlantar.kategori_ot_id', 'LEFT');
        $this->db->join('fasilitas_kesehatan', 'fasilitas_kesehatan.fasilitas_kesehatan_id = terlantar.fasilitas_kesehatan_id', 'LEFT');
        $this->db->join('kondisi_ot', 'kondisi_ot.kondisi_ot_id = terlantar.kondisi_ot_id', 'LEFT');
        $this->db->join('kebutuhan_diperlukan', 'kebutuhan_diperlukan.kebutuhan_diperlukan_id = terlantar.kebutuhan_diperlukan_id', 'LEFT');
        $this->db->join('sumber_dana', 'sumber_dana.sumber_dana_id = terlantar.sumber_dana_id', 'LEFT');
        $this->db->join('bansos', 'bansos.bansos_id = terlantar.bansos_id', 'LEFT');
        $this->db->join('user', 'user.user_id = terlantar.user_daftar', 'LEFT');
        $this->db->join('admin as admin_verif', 'admin_verif.admin_id = terlantar.verif_by', 'LEFT');
        $this->db->join('admin as admin_terima', 'admin_terima.admin_id = terlantar.terima_by', 'LEFT');
        $this->db->join('admin as admin_tolak', 'admin_tolak.admin_id = terlantar.tolak_by', 'LEFT');
        if ($terlantar_id != null) {
            $this->db->where(['terlantar.terlantar_id' => $terlantar_id]);
            $data = $this->db->get()->row_array();
            return $data;
        } else {
            if ($where != null) {
                $this->db->where($where);
            }
            if ($whereNotIn != null) {
                $this->db->where_not_in('terlantar_id', $whereNotIn);
            }
            $datas = $this->db->get()->result_array();
            return $datas;
        }
    }

    /*
     * Get all terlantar count
     */
    function get_all_terlantar_count()
    {
        $this->db->from($this->table);
        return $this->db->count_all_results();
    }
    // public function set_status($id, $kolom = 'verif', $adminId = NULL, $nilai = 0)
    // {
    //     $params = [
    //         $kolom => $nilai,
    //         $kolom . '_by' => $adminId,
    //         $kolom . '_at' => date('Y-m-d H:i:s')
    //     ];
    //     if ($adminId == NULL) {
    //         $params[$kolom . '_by'] = null;
    //         $params[$kolom . '_at'] = null;
    //     }
    //     $this->db->where(['terlantar_id' => $id]);
    //     return $this->db->update($this->table, $params);
    // }

    /*
     * Get all terlantar
     */
    function get_all_terlantar($params = [], $order = 'desc')
    {
        $this->db->order_by('terlantar_id', $order);
        if (isset($params) && !empty($params)) {
            $this->db->limit($params['limit'], $params['offset']);
        }
        return $this->db->get($this->table)->result_array();
    }

    /*
     * function to add new terlantar
     */
    function add_terlantar($params)
    {
        $params['created_at'] = date('Y-m-d H:i:s');
        $params['updated_at'] = date('Y-m-d H:i:s');
        $this->db->insert($this->table, $params);
        return $this->db->insert_id();
    }

    /*
     * function to update terlantar
     */
    function update_terlantar($terlantar_id, $params)
    {
        $params['updated_at'] = date('Y-m-d H:i:s');
        $this->db->where('terlantar_id', $terlantar_id);
        return $this->db->update($this->table, $params);
    }

    /*
     * function to delete terlantar
     */
    function delete_terlantar($terlantar_id)
    {
        return $this->db->delete($this->table, array('terlantar_id' => $terlantar_id));
    }
    function getNoUrut()
    {
        $noUrut = "NO-" . date('Y-m-d');
        $data = $this->db->select('no_urut')->like('no_urut', $noUrut)->order_by('terlantar_id', 'DESC')->get($this->table)->row();
        if ($data) {
            $noUrut = $data->no_urut;
            [$str, $year, $month, $day, $no] = explode('-', $noUrut);
            $date = $year . "-" . $month . "-" . $day;
            $no = (int) $no + 1;
            return $str . "-" . $date . "-" . $no;
        } else {
            return $noUrut . "-1";
        }
    }
    function seed()
    {
        $nama = [
            'Abyasa', 'Ade', 'Adhiarja', 'Adiarja', 'Adika', 'Adikara', 'Adinata',
            'Aditya', 'Agus', 'Ajiman', 'Ajimat', 'Ajimin', 'Ajiono', 'Akarsana',
            'Alambana', 'Among', 'Anggabaya', 'Anom', 'Argono', 'Aris', 'Arta',
            'Artanto', 'Artawan', 'Arsipatra', 'Asirwada', 'Asirwanda', 'Aslijan',
            'Asmadi', 'Asman', 'Asmianto', 'Asmuni', 'Aswani', 'Atma', 'Atmaja',
            'Bagas', 'Bagiya', 'Bagus', 'Bagya', 'Bahuraksa', 'Bahuwarna',
            'Bahuwirya', 'Bajragin', 'Bakda', 'Bakiadi', 'Bakianto', 'Bakidin',
            'Bakijan', 'Bakiman', 'Bakiono', 'Bakti', 'Baktiadi', 'Baktianto',
            'Baktiono', 'Bala', 'Balamantri', 'Balangga', 'Balapati', 'Balidin',
            'Balijan', 'Bambang', 'Banara', 'Banawa', 'Banawi', 'Bancar', 'Budi',
            'Cagak', 'Cager', 'Cahyadi', 'Cahyanto', 'Cahya', 'Cahyo', 'Cahyono',
            'Caket', 'Cakrabirawa', 'Cakrabuana', 'Cakrajiya', 'Cakrawala',
            'Cakrawangsa', 'Candra', 'Chandra', 'Candrakanta', 'Capa', 'Caraka',
            'Carub', 'Catur', 'Caturangga', 'Cawisadi', 'Cawisono', 'Cawuk',
            'Cayadi', 'Cecep', 'Cemani', 'Cemeti', 'Cemplunk', 'Cengkal', 'Cengkir',
            'Dacin', 'Dadap', 'Dadi', 'Dagel', 'Daliman', 'Dalimin', 'Daliono',
            'Damar', 'Damu', 'Danang', 'Daniswara', 'Danu', 'Danuja', 'Dariati',
            'Darijan', 'Darimin', 'Darmaji', 'Darman', 'Darmana', 'Darmanto',
            'Darsirah', 'Dartono', 'Daru', 'Daruna', 'Daryani', 'Dasa', 'Digdaya',
            'Dimas', 'Dimaz', 'Dipa', 'Dirja', 'Drajat', 'Dwi', 'Dono', 'Dodo',
            'Edi', 'Eka', 'Elon', 'Eluh', 'Eman', 'Emas', 'Embuh', 'Emong',
            'Empluk', 'Endra', 'Enteng', 'Estiawan', 'Estiono', 'Eko', 'Edi',
            'Edison', 'Edward', 'Elvin', 'Erik', 'Emil', 'Ega', 'Emin', 'Eja',
            'Gada', 'Gadang', 'Gaduh', 'Gaiman', 'Galak', 'Galang', 'Galar',
            'Galih', 'Galiono', 'Galuh', 'Galur', 'Gaman', 'Gamani', 'Gamanto',
            'Gambira', 'Gamblang', 'Ganda', 'Gandewa', 'Gandi', 'Gandi', 'Ganep',
            'Gangsa', 'Gangsar', 'Ganjaran', 'Gantar', 'Gara', 'Garan', 'Garang',
            'Garda', 'Gatot', 'Gatra', 'Gilang', 'Galih', 'Ghani', 'Gading',
            'Hairyanto', 'Hardana', 'Hardi', 'Harimurti', 'Harja', 'Harjasa',
            'Harjaya', 'Harjo', 'Harsana', 'Harsanto', 'Harsaya', 'Hartaka',
            'Hartana', 'Harto', 'Hasta', 'Heru', 'Himawan', 'Hadi', 'Halim',
            'Hasim', 'Hasan', 'Hendra', 'Hendri', 'Heryanto', 'Hamzah', 'Hari',
            'Imam', 'Indra', 'Irwan', 'Irsad', 'Ikhsan', 'Irfan', 'Ian', 'Ibrahim',
            'Ibrani', 'Ismail', 'Irnanto', 'Ilyas', 'Ibun', 'Ivan', 'Ikin', 'Ihsan',
            'Jabal', 'Jaeman', 'Jaga', 'Jagapati', 'Jagaraga', 'Jail', 'Jaiman',
            'Jaka', 'Jarwa', 'Jarwadi', 'Jarwi', 'Jasmani', 'Jaswadi', 'Jati',
            'Jatmiko', 'Jaya', 'Jayadi', 'Jayeng', 'Jinawi', 'Jindra', 'Joko',
            'Jumadi', 'Jumari', 'Jamal', 'Jamil', 'Jais', 'Jefri', 'Johan', 'Jono',
            'Kacung', 'Kajen', 'Kambali', 'Kamidin', 'Kariman', 'Karja', 'Karma',
            'Karman', 'Karna', 'Karsa', 'Karsana', 'Karta', 'Kasiran', 'Kasusra',
            'Kawaca', 'Kawaya', 'Kayun', 'Kemba', 'Kenari', 'Kenes', 'Kuncara',
            'Kunthara', 'Kusuma', 'Kadir', 'Kala', 'Kalim', 'Kurnia', 'Kanda',
            'Kardi', 'Karya', 'Kasim', 'Kairav', 'Kenzie', 'Kemal', 'Kamal', 'Koko',
            'Labuh', 'Laksana', 'Lamar', 'Lanang', 'Langgeng', 'Lanjar', 'Lantar',
            'Lega', 'Legawa', 'Lembah', 'Liman', 'Limar', 'Luhung', 'Lukita',
            'Luluh', 'Lulut', 'Lurhur', 'Luwar', 'Luwes', 'Latif', 'Lasmanto',
            'Lukman', 'Luthfi', 'Leo', 'Luis', 'Lutfan', 'Lasmono', 'Laswi',
            'Mahesa', 'Makara', 'Makuta', 'Manah', 'Maras', 'Margana', 'Mariadi',
            'Marsudi', 'Martaka', 'Martana', 'Martani', 'Marwata', 'Maryadi',
            'Maryanto', 'Mitra', 'Mujur', 'Mulya', 'Mulyanto', 'Mulyono', 'Mumpuni',
            'Muni', 'Mursita', 'Murti', 'Mustika', 'Maman', 'Mahmud', 'Mahdi',
            'Mahfud', 'Malik', 'Muhammad', 'Mustofa', 'Marsito', 'Mursinin',
            'Nalar', 'Naradi', 'Nardi', 'Niyaga', 'Nrima', 'Nugraha', 'Nyana',
            'Narji', 'Nasab', 'Nasrullah', 'Nasim', 'Najib', 'Najam', 'Nyoman',
            'Olga', 'Ozy', 'Omar', 'Opan', 'Oskar', 'Oman', 'Okto', 'Okta', 'Opung',
            'Paiman', 'Panca', 'Pangeran', 'Pangestu', 'Pardi', 'Parman', 'Perkasa',
            'Praba', 'Prabu', 'Prabawa', 'Prabowo', 'Prakosa', 'Pranata', 'Pranawa',
            'Prasetya', 'Prasetyo', 'Prayitna', 'Prayoga', 'Prayogo', 'Purwadi',
            'Purwa', 'Purwanto', 'Panji', 'Pandu', 'Paiman', 'Prima', 'Putu',
            'Raden', 'Raditya', 'Raharja', 'Rama', 'Rangga', 'Reksa', 'Respati',
            'Rusman', 'Rosman', 'Rahmat', 'Rahman', 'Rendy', 'Reza', 'Rizki',
            'Ridwan', 'Rudi', 'Raden', 'Radit', 'Radika', 'Rafi', 'Rafid', 'Raihan',
            'Salman', 'Saadat', 'Saiful', 'Surya', 'Slamet', 'Samsul', 'Soleh',
            'Simon', 'Sabar', 'Sabri', 'Sidiq', 'Satya', 'Setya', 'Saka', 'Sakti',
            'Taswir', 'Tedi', 'Teddy', 'Taufan', 'Taufik', 'Tomi', 'Tasnim',
            'Teguh', 'Tasdik', 'Timbul', 'Tirta', 'Tirtayasa', 'Tri', 'Tugiman',
            'Umar', 'Usman', 'Uda', 'Umay', 'Unggul', 'Utama', 'Umaya', 'Upik',
            'Viktor', 'Vino', 'Vinsen', 'Vero', 'Vega', 'Viman', 'Virman',
            'Wahyu', 'Wira', 'Wisnu', 'Wadi', 'Wardi', 'Warji', 'Waluyo', 'Wakiman',
            'Wage', 'Wardaya', 'Warsa', 'Warsita', 'Warta', 'Wasis', 'Wawan',
            'Xanana', 'Yahya', 'Yusuf', 'Yosef', 'Yono', 'Yoga',
        ];
        $desa = ['ajibarang kulon', 'ajibarang wetan', 'banjarkulon', 'banjarmangu', 'gripit', 'ampelsari', 'bakal', 'batur', 'bandingan', 'bawang', 'pucang'];
        $kabupaten = ["banjarnegara", 'banyumas', 'kebumen', 'batang', 'blora', 'boyolali', 'brebes', 'purwodadi', 'jepara'];
        $kecamatan = ['banjarmangu', 'banjarnegara', 'batur', 'bawang', 'kalibening', 'karangkobar', 'ajibarang', 'banyumas', 'baturaden', 'cilongok', 'purwokerto barat', 'purwokerto selatan', 'purwokerto timur'];
        $jenis = ["PRIA", 'WANITA'];
        // for ($loop = 1; $loop <= 5; $loop++) {

        // }
        $data = [];
        $start = strtotime("2020-01-01");
        for ($i = 1; $i <= 100; $i++) {
            $at = date("Y-m-d H:i:s", mt_rand($start, time()));
            $arr = [
                "orang_terlantar_id" => (string) rand(1, 2),
                "identitas_kependudukan" => (string) rand(0, 1),
                "no_urut" => "NO-" . date('Y-m-d', strtotime($at)) . "-" . $i,
                "foto" => "NO-" . date('Y-m-d', strtotime($at)) . "-" . $i . ".jpg",
                "terlantar_nama" => strtoupper($nama[rand(0, sizeof($nama) - 1)]),
                "terlantar_nik" => 3304110701000000 + $i,
                "terlantar_no_kk" => 3304110701000000 + $i * 2,
                "terlantar_tempat_lahir" => strtoupper($kabupaten[rand(0, sizeof($kabupaten) - 1)]),
                "terlantar_tanggal_lahir" => date('Y-m-d', mt_rand(1, time())),
                "terlantar_jenis_kelamin" => $jenis[rand(0, sizeof($jenis) - 1)],
                "agama_id" => (string) rand(1, 7),
                "terlantar_alamat" => strtoupper($desa[rand(0, sizeof($desa) - 1)]),
                "terlantar_rt" => strtoupper(rand(0, 99)),
                "terlantar_rw" => strtoupper(rand(0, 99)),
                "terlantar_desa" => strtoupper($desa[rand(0, sizeof($desa) - 1)]),
                "terlantar_kecamatan" => strtoupper($kecamatan[rand(0, sizeof($kecamatan) - 1)]),
                "terlantar_kabupaten" => strtoupper($kabupaten[rand(0, sizeof($kabupaten) - 1)]),
                "terlantar_telp" => "0895378036526",
                "tempat_tinggal_id" => (string) rand(1, 5),
                "kondisi_tempat_tinggal_id" => (string) rand(1, 3),
                "kategori_ot_id" => (string) rand(1, 4),
                "fasilitas_kesehatan_id" => (string) rand(1, 3),
                "kondisi_ot_id" => (string) rand(1, 3),
                "kebutuhan_diperlukan_id" => (string) rand(1, 10),
                "kebutuhan_diperlukan_lainnya" => "uang",
                "alasan_terlantar" => "tidak punya uang",
                "tujuan_alamat" => strtoupper($desa[rand(0, sizeof($desa) - 1)]),
                "tujuan_rt" => strtoupper(rand(0, 99)),
                "tujuan_rw" => strtoupper(rand(0, 99)),
                "tujuan_desa" => strtoupper($desa[rand(0, sizeof($desa) - 1)]),
                "tujuan_kecamatan" => strtoupper($kecamatan[rand(0, sizeof($kecamatan) - 1)]),
                "tujuan_kabupaten" => strtoupper($kabupaten[rand(0, sizeof($kabupaten) - 1)]),
                "tujuan_provinsi" => strtoupper("jawa tengah"),
                "user_daftar" => (string) rand(1, 100),
                "proses_id" => $i,
                "verif_id" => $i,
                "tolak_id" => $i,
                "created_at"  => $at,
                "updated_at"  => $at,
            ];
            if ($i <= 25) {
                $arr['proses_id'] = null;
                $arr['verif_id'] = null;
                $arr['tolak_id'] = null;
            }
            if ($i > 25 && $i <= 50) {
                $arr['verif_id'] = null;
                $arr['tolak_id'] = null;
            }
            if ($i > 50 && $i <= 75) {
                $arr['tolak_id'] = null;
            }
            if ($i > 75 && $i <= 100) {
                $arr['verif_id'] = null;
                $arr['proses_id'] = null;
            }
            if ($i > 50) {
                $arr["kebutuhan_diperlukan_id"] = null;
            }

            array_push($data, $arr);
        }
        $this->db->insert_batch($this->table, $data);
    }
}
