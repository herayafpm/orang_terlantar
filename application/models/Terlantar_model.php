<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Terlantar_model extends CI_Model
{
    protected $table = 'terlantar';
    protected $terlantar_nama = 'terlantar_nama';
    function __construct()
    {
        parent::__construct();
    }
    
    public function filter($search, $limit, $start, $order_field, $order_ascdesc,$user_daftar = NULL){
        $this->db->like($this->terlantar_nama, $search); // Untuk menambahkan query where LIKE
        $this->db->order_by($order_field, $order_ascdesc); // Untuk menambahkan query ORDER BY
        $this->db->limit($limit, $start); // Untuk menambahkan query LIMIT
        if($user_daftar != NULL){
            $this->db->where(['user_daftar' => $user_daftar]);
        }
        return $this->db->get($this->table)->result_array(); // Eksekusi query sql sesuai kondisi diatas
    }
    public function count_all($user_daftar = NULL){
        if($user_daftar != NULL){
            $this->db->where(['user_daftar' => $user_daftar]);
        }
        return $this->db->count_all($this->table); // Untuk menghitung semua data siswa
    }
    public function count_filter($search,$user_daftar = NULL){
        if($user_daftar != NULL){
            $this->db->where(['user_daftar' => $user_daftar]);
        }
        $this->db->like($this->terlantar_nama, $search); // Untuk menambahkan query where OR LIKE
        $this->db->or_like('terlantar_nik',$search); // Untuk menambahkan query where OR LIKE
        return $this->db->get($this->table)->num_rows(); // Untuk menghitung jumlah data sesuai dengan filter pada textbox pencarian
    }
    
    /*
     * Get terlantar by terlantar_id
     */
    function get_terlantar($terlantar_id)
    {
        return $this->db->get_where($this->table,array('terlantar_id'=>$terlantar_id))->row_array();
    }
    function get_terlantar_detail($terlantar_id)
    {
        $this->db->select('terlantar.*');
        $this->db->select('orang_terlantar.orang_terlantar_nama');
        $this->db->select('agama.agama_nama');
        $this->db->select('tempat_tinggal.tempat_tinggal_nama');
        $this->db->select('kondisi_tempat_tinggal.kondisi_tempat_tinggal_nama');
        $this->db->select('kategori_ot.kategori_ot_nama');
        $this->db->select('fasilitas_kesehatan.fasilitas_kesehatan_nama');
        $this->db->select('kondisi_ot.kondisi_ot_nama');
        $this->db->select('kebutuhan_diperlukan.kebutuhan_diperlukan_nama');
        $this->db->select('bansos.bansos_nama');
        $this->db->from('terlantar');
        $this->db->join('orang_terlantar','orang_terlantar.orang_terlantar_id = terlantar.orang_terlantar_id','LEFT');
        $this->db->join('agama','agama.agama_id = terlantar.agama_id','LEFT');
        $this->db->join('tempat_tinggal','tempat_tinggal.tempat_tinggal_id = terlantar.tempat_tinggal_id','LEFT');
        $this->db->join('kondisi_tempat_tinggal','kondisi_tempat_tinggal.kondisi_tempat_tinggal_id = terlantar.kondisi_tempat_tinggal_id','LEFT');
        $this->db->join('kategori_ot','kategori_ot.kategori_ot_id = terlantar.kategori_ot_id','LEFT');
        $this->db->join('fasilitas_kesehatan','fasilitas_kesehatan.fasilitas_kesehatan_id = terlantar.fasilitas_kesehatan_id','LEFT');
        $this->db->join('kondisi_ot','kondisi_ot.kondisi_ot_id = terlantar.kondisi_ot_id','LEFT');
        $this->db->join('kebutuhan_diperlukan','kebutuhan_diperlukan.kebutuhan_diperlukan_id = terlantar.kebutuhan_diperlukan_id','LEFT');
        $this->db->join('bansos','bansos.bansos_id = terlantar.bansos_id','LEFT');
        $this->db->where(['terlantar.terlantar_id'=>$terlantar_id]);
        return $this->db->get()->row_array();
    }
    
    /*
     * Get all terlantar count
     */
    function get_all_terlantar_count()
    {
        $this->db->from($this->table);
        return $this->db->count_all_results();
    }
        
    /*
     * Get all terlantar
     */
    function get_all_terlantar($params = [])
    {
        $this->db->order_by('terlantar_id', 'desc');
        if(isset($params) && !empty($params))
        {
            $this->db->limit($params['limit'], $params['offset']);
        }
        return $this->db->get($this->table)->result_array();
    }
        
    /*
     * function to add new terlantar
     */
    function add_terlantar($params)
    {
        $params['created_at'] = date('Y-m-d H:i:s');
        $params['updated_at'] = date('Y-m-d H:i:s');
        $this->db->insert($this->table,$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update terlantar
     */
    function update_terlantar($terlantar_id,$params)
    {
      $params['created_at'] = date('Y-m-d H:i:s');
      $params['updated_at'] = date('Y-m-d H:i:s');
        $this->db->where('terlantar_id',$terlantar_id);
        return $this->db->update($this->table,$params);
    }
    
    /*
     * function to delete terlantar
     */
    function delete_terlantar($terlantar_id)
    {
        return $this->db->delete($this->table,array('terlantar_id'=>$terlantar_id));
    }
    function getNoUrut()
    {
      $noUrut = "NO-".date('Y-m-d');
      $data = $this->db->select('no_urut')->like('no_urut',$noUrut)->order_by('terlantar_id','DESC')->get($this->table)->row();
      if($data){
          $noUrut = $data->no_urut;
          [$str,$year,$month,$day,$no] = explode('-',$noUrut);
          $date = $year."-".$month."-".$day;
          $no = (int) $no + 1;
          return $str."-".$date."-".$no;
      }else{
          return $noUrut."-1";
      }
    }
}